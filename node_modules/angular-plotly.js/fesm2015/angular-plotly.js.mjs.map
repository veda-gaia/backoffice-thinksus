{"version":3,"file":"angular-plotly.js.mjs","sources":["../../../projects/plotly/src/lib/plotly.service.ts","../../../projects/plotly/src/lib/plotly.theme-loader.service.ts","../../../projects/plotly/src/lib/plotly.component.ts","../../../projects/plotly/src/lib/plotly-shared.module.ts","../../../projects/plotly/src/lib/plotly.module.ts","../../../projects/plotly/src/lib/plotly-via-cdn.module.ts","../../../projects/plotly/src/lib/plotly-via-window.module.ts","../../../projects/plotly/src/public-api.ts","../../../projects/plotly/src/angular-plotly.js.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plotly } from './plotly.interface';\n\ntype PlotlyName = 'Plotly' | 'ViaCDN' | 'ViaWindow' | undefined;\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PlotlyService {\n    protected static instances: Plotly.PlotlyHTMLElement[] = [];\n    protected static plotly?: any = undefined;\n    protected static moduleName?: PlotlyName = undefined;\n\n    public static setModuleName(moduleName: PlotlyName): void {\n        PlotlyService.moduleName = moduleName;\n    }\n\n    public static getModuleName(): PlotlyName {\n        return PlotlyService.moduleName;\n    }\n\n    public static setPlotly(plotly: any): void {\n        if (typeof plotly === 'object' && typeof plotly.react !== 'function') {\n            throw new Error('Invalid plotly.js version. Please, use any version above 1.40.0');\n        }\n\n        PlotlyService.plotly = plotly;\n    }\n\n    public static insert(instance: Plotly.PlotlyHTMLElement): Plotly.PlotlyHTMLElement {\n        const index = PlotlyService.instances.indexOf(instance);\n        if (index === -1) {\n            PlotlyService.instances.push(instance);\n        }\n        return instance;\n    }\n\n    public static remove(div: Plotly.PlotlyHTMLElement): void {\n        const index = PlotlyService.instances.indexOf(div);\n        if (index >= 0) {\n            PlotlyService.instances.splice(index, 1);\n            PlotlyService.plotly.purge(div);\n        }\n    }\n\n    public getInstanceByDivId(id: string): Plotly.PlotlyHTMLElement | undefined {\n        for (const instance of PlotlyService.instances) {\n            if (instance && instance.id === id) {\n                return instance;\n            }\n        }\n        return undefined;\n    }\n\n    public async getPlotly(): Promise<any> {\n        await this.waitFor(() => this._getPlotly() !== 'waiting');\n        return this._getPlotly();\n    }\n\n    protected _getPlotly(): any {\n        if (typeof PlotlyService.plotly === 'undefined') {\n            const msg = PlotlyService.moduleName === 'ViaCDN'\n                ? `Error loading Peer dependency plotly.js from CDN url`\n                : `Peer dependency plotly.js isn't installed`;\n\n            throw new Error(msg);\n        }\n\n        return PlotlyService.plotly;\n    }\n\n    protected waitFor(fn: () => boolean): Promise<void> {\n        return new Promise((resolve) => {\n            const localFn = () => {\n                fn() ? resolve() : setTimeout(localFn, 10);\n            };\n\n            localFn();\n        });\n    }\n\n    public async newPlot(div: HTMLDivElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any> {\n        await this.waitFor(() => this._getPlotly() !== 'waiting');\n\n        if (frames) {\n            const obj = { data, layout, config, frames };\n            return this._getPlotly().newPlot(div, obj).then(() => PlotlyService.insert(div as any)) as Promise<any>;\n        }\n\n        return this._getPlotly().newPlot(div, data, layout, config).then(() => PlotlyService.insert(div as any)) as Promise<any>;\n    }\n\n    public plot(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any> {\n        if (frames) {\n            const obj = { data, layout, config, frames };\n            return this._getPlotly().newPlot(div, obj) as Promise<any>;\n        }\n\n        return this._getPlotly().newPlot(div, data, layout, config) as Promise<any>;\n    }\n\n    public update(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any> {\n        if (frames) {\n            const obj = { data, layout, config, frames };\n            return this._getPlotly().react(div, obj) as Promise<any>;\n        }\n\n        return this._getPlotly().react(div, data, layout, config) as Promise<any>;\n    }\n\n    public resize(div: Plotly.PlotlyHTMLElement): void {\n        return this._getPlotly().Plots.resize(div);\n    }\n}\n","import { Injectable } from '@angular/core';\n\nexport type PlotlyTheme = 'ggplot2' | 'seaborn' | 'simple_white' | 'plotly' | 'plotly_white' | 'plotly_dark' | 'presentation' | 'xgridoff' | 'ygridoff' | 'gridon' | 'none';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PlotlyThemeLoaderService {\n\n    public get isLoading() { return this._isLoading; }\n    private _isLoading: boolean = false;\n\n    public load(themeName: PlotlyTheme): Promise<any> {\n        this._isLoading = true;\n        return new Promise(resolve => {\n            // import(`./themes/${themeName}.json`).then(data => {\n                resolve(true);\n            //     this._isLoading = false;\n            // });\n        });\n    }\n}","/* eslint-disable @angular-eslint/no-conflicting-lifecycle */\n\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChange,\n    SimpleChanges,\n    ViewChild,\n    DoCheck,\n    IterableDiffer,\n    IterableDiffers,\n    KeyValueDiffer,\n    KeyValueDiffers,\n} from '@angular/core';\n\nimport { PlotlyService } from './plotly.service';\nimport { PlotlyThemeLoaderService, PlotlyTheme } from './plotly.theme-loader.service';\nimport { Plotly } from './plotly.interface';\n\n// @dynamic\n@Component({\n    selector: 'plotly-plot',\n    template: `<div #plot [attr.id]=\"divId\" [ngClass]=\"getClassName()\" [ngStyle]=\"style\">\n      <ng-content></ng-content>\n    </div>`,\n    providers: [PlotlyService],\n})\nexport class PlotlyComponent implements OnInit, OnChanges, OnDestroy, DoCheck {\n    protected defaultClassName = 'js-plotly-plot';\n\n    public plotlyInstance?: Plotly.PlotlyHTMLElement;\n    public resizeHandler?: (instance: Plotly.PlotlyHTMLElement) => void;\n    public layoutDiffer?: KeyValueDiffer<string, any>;\n    public dataDiffer?: IterableDiffer<Plotly.Data>;\n\n    @ViewChild('plot', { static: true }) plotEl!: ElementRef;\n\n    @Input() data?: Plotly.Data[];\n    @Input() layout?: Partial<Plotly.Layout>;\n    @Input() config?: Partial<Plotly.Config>;\n    @Input() frames?: Partial<Plotly.Config>[];\n    @Input() style?: { [key: string]: string };\n    @Input() theme: PlotlyTheme = \"none\";\n\n    @Input() divId?: string;\n    @Input() revision = 0;\n    @Input() className?: string | string[];\n    @Input() debug = false;\n    @Input() useResizeHandler = false;\n\n    @Input() updateOnLayoutChange = true;\n    @Input() updateOnDataChange = true;\n    @Input() updateOnlyWithRevision = false;\n\n    @Output() initialized = new EventEmitter<Plotly.Figure>();\n    @Output() update = new EventEmitter<Plotly.Figure>();\n    @Output() purge = new EventEmitter<Plotly.Figure>();\n    // eslint-disable-next-line @angular-eslint/no-output-native\n    @Output() error = new EventEmitter<Error>();\n\n    @Output() afterExport = new EventEmitter();\n    @Output() afterPlot = new EventEmitter();\n    @Output() animated = new EventEmitter();\n    @Output() animatingFrame = new EventEmitter();\n    @Output() animationInterrupted = new EventEmitter();\n    @Output() autoSize = new EventEmitter();\n    @Output() beforeExport = new EventEmitter();\n    @Output() beforeHover = new EventEmitter();\n    @Output() buttonClicked = new EventEmitter();\n    /**\n     * @deprecated DEPRECATED: Reconsider using `(plotlyClick)` instead of `(click)` to avoid event conflict. Please check https://github.com/plotly/angular-plotly.js#FAQ\n     */\n    // eslint-disable-next-line @angular-eslint/no-output-native\n    @Output() click = new EventEmitter();\n    @Output() plotlyClick = new EventEmitter();\n    @Output() clickAnnotation = new EventEmitter();\n    @Output() deselect = new EventEmitter();\n    @Output() doubleClick = new EventEmitter();\n    @Output() framework = new EventEmitter();\n    @Output() hover = new EventEmitter();\n    @Output() legendClick = new EventEmitter();\n    @Output() legendDoubleClick = new EventEmitter();\n    /**\n     * @deprecated DEPRECATED: Event react is not list as an plotly.js event\n     */\n    @Output() react = new EventEmitter();\n    @Output() relayout = new EventEmitter();\n    @Output() relayouting = new EventEmitter();\n    @Output() restyle = new EventEmitter();\n    @Output() redraw = new EventEmitter();\n    @Output() selected = new EventEmitter();\n    @Output() selecting = new EventEmitter();\n    @Output() sliderChange = new EventEmitter();\n    @Output() sliderEnd = new EventEmitter();\n    @Output() sliderStart = new EventEmitter();\n    @Output() sunburstclick = new EventEmitter();\n    @Output() transitioning = new EventEmitter();\n    @Output() transitionInterrupted = new EventEmitter();\n    @Output() unhover = new EventEmitter();\n    /**\n     * @deprecated DEPRECATED: Event treemapclick is not list as an plotly.js event\n     */\n    @Output() treemapclick = new EventEmitter();\n    @Output() webglcontextlost = new EventEmitter();\n\n\n    public eventNames = ['afterExport', 'afterPlot', 'animated', 'animatingFrame', 'animationInterrupted', 'autoSize',\n        'beforeExport', 'beforeHover', 'buttonClicked', 'clickAnnotation', 'deselect', 'doubleClick', 'framework', 'hover',\n        'legendClick', 'legendDoubleClick', 'react', 'relayout', 'relayouting',  'restyle', 'redraw', 'selected', 'selecting', 'sliderChange',\n        'sliderEnd', 'sliderStart', 'sunburstclick', 'transitioning', 'transitionInterrupted', 'unhover', 'treemapclick', 'webglcontextlost'];\n\n    constructor(\n        public plotly: PlotlyService,\n        public themeLoader: PlotlyThemeLoaderService,\n        public iterableDiffers: IterableDiffers,\n        public keyValueDiffers: KeyValueDiffers,\n    ) { }\n\n    ngOnInit(): void {\n        this.createPlot().then(() => {\n            const figure = this.createFigure();\n            this.initialized.emit(figure);\n        });\n\n        if (this.click.observers.length > 0) {\n            const msg = 'DEPRECATED: Reconsider using `(plotlyClick)` instead of `(click)` to avoid event conflict. '\n                + 'Please check https://github.com/plotly/angular-plotly.js#FAQ';\n            console.error(msg);\n        }\n\n        // if (this.theme != 'none') this.loadTheme();\n    }\n\n    ngOnDestroy(): void {\n        if (typeof this.resizeHandler === 'function') {\n            this.getWindow().removeEventListener('resize', this.resizeHandler as any);\n            this.resizeHandler = undefined;\n        }\n\n        if (this.plotlyInstance) {\n            const figure = this.createFigure();\n            this.purge.emit(figure);\n            PlotlyService.remove(this.plotlyInstance);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        let shouldUpdate = false;\n\n        const revision: SimpleChange = changes['revision'];\n        if (revision && !revision.isFirstChange()) {\n            shouldUpdate = true;\n        }\n\n        const debug: SimpleChange = changes['debug'];\n        if (debug && !debug.isFirstChange()) {\n            shouldUpdate = true;\n        }\n\n        if (shouldUpdate) {\n            this.updatePlot();\n        }\n\n        this.updateWindowResizeHandler();\n    }\n\n    ngDoCheck(): boolean | void {\n        if (this.updateOnlyWithRevision) {\n            return false;\n        }\n\n        let shouldUpdate = false;\n\n        if (this.updateOnLayoutChange) {\n            if (this.layoutDiffer) {\n                const layoutHasDiff = this.layoutDiffer.diff(this.layout!);\n                if (layoutHasDiff) {\n                    shouldUpdate = true;\n                }\n            } else if (this.layout) {\n                this.layoutDiffer = this.keyValueDiffers.find(this.layout).create();\n            } else {\n                this.layoutDiffer = undefined;\n            }\n        }\n\n        if (this.updateOnDataChange) {\n            if (this.dataDiffer) {\n                const dataHasDiff = this.dataDiffer.diff(this.data);\n                if (dataHasDiff) {\n                    shouldUpdate = true;\n                }\n            } else if (Array.isArray(this.data)) {\n                this.dataDiffer = this.iterableDiffers.find(this.data).create(this.dataDifferTrackBy);\n            } else {\n                this.dataDiffer = undefined;\n            }\n        }\n\n        if (shouldUpdate && this.plotlyInstance) {\n            this.updatePlot();\n        }\n    }\n\n    getData(): Plotly.Data[] {\n        return this.data ?? [];\n    }\n\n    getWindow(): any {\n        return window;\n    }\n\n    getClassName(): string {\n        let classes = [this.defaultClassName];\n\n        if (Array.isArray(this.className)) {\n            classes = classes.concat(this.className);\n        } else if (this.className) {\n            classes.push(this.className);\n        }\n\n        return classes.join(' ');\n    }\n\n    createPlot(): Promise<void> {\n        return this.plotly.newPlot(this.plotEl.nativeElement, this.getData(), this.layout, this.config, this.frames).then(plotlyInstance => {\n            this.plotlyInstance = plotlyInstance;\n            this.getWindow().gd = this.debug ? plotlyInstance : undefined;\n\n            this.eventNames.forEach(name => {\n                const eventName = `plotly_${name.toLowerCase()}`;\n                const event = (this as any)[name] as EventEmitter<void>;\n\n                plotlyInstance.on(eventName, (data: any) => event.emit(data));\n            });\n\n            plotlyInstance.on('plotly_click', (data: any) => {\n                this.plotlyClick.emit(data);\n            });\n\n            this.updateWindowResizeHandler();\n        }, err => {\n            console.error('Error while plotting:', err);\n            this.error.emit(err);\n        });\n    }\n\n    createFigure(): Plotly.Figure {\n        const p: any = this.plotlyInstance;\n        const figure: Plotly.Figure = {\n            data: p.data,\n            layout: p.layout,\n            frames: p._transitionData ? p._transitionData._frames : null\n        };\n\n        return figure;\n    }\n\n    updatePlot(): Promise<any> {\n        if (!this.plotlyInstance) {\n            const error = new Error(`Plotly component wasn't initialized`);\n            this.error.emit(error);\n            throw error;\n        }\n\n        const layout = { ...this.layout };\n\n        return this.plotly.update(this.plotlyInstance, this.getData(), layout, this.config, this.frames).then(() => {\n            const figure = this.createFigure();\n            this.update.emit(figure);\n        }, err => {\n            console.error('Error while updating plot:', err);\n            this.error.emit(err);\n        });\n    }\n\n    updateWindowResizeHandler(): void {\n        if (this.useResizeHandler) {\n            if (this.resizeHandler === undefined) {\n                this.resizeHandler = () => this.plotly.resize(this.plotlyInstance!);\n                this.getWindow().addEventListener('resize', this.resizeHandler as any);\n            }\n        } else {\n            if (typeof this.resizeHandler === 'function') {\n                this.getWindow().removeEventListener('resize', this.resizeHandler as any);\n                this.resizeHandler = undefined;\n            }\n        }\n    }\n\n    dataDifferTrackBy(_: number, item: any): unknown {\n        const obj = Object.assign({}, item, { uid: '' });\n        return JSON.stringify(obj);\n    }\n\n    loadTheme() {\n        if (this.layout !== undefined) {\n            const msg = 'You fulfill both `theme` and `layout` properties. This will overwrite the `layout` data with the `theme` data.';\n            console.warn(msg);\n        }\n\n        this.themeLoader.load(this.theme).then(theme => this.layout = theme);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotlyService } from './plotly.service';\nimport { PlotlyComponent } from './plotly.component';\n\n\n@NgModule({\n    declarations: [PlotlyComponent],\n    imports: [CommonModule],\n    providers: [PlotlyService],\n    exports: [PlotlyComponent],\n})\nexport class PlotlySharedModule {\n    constructor() { }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotlyService } from './plotly.service';\nimport { PlotlySharedModule } from './plotly-shared.module';\n\n\n\n@NgModule({\n    declarations: [],\n    imports: [CommonModule, PlotlySharedModule],\n    providers: [PlotlyService],\n    exports: [PlotlySharedModule],\n})\nexport class PlotlyModule {\n    public static plotlyjs: any = {};\n\n    constructor() {\n        if (!this.isValid()) {\n            const msg = 'Invalid PlotlyJS object. Please check https://github.com/plotly/angular-plotly.js#quick-start'\n                + ' to see how to add PlotlyJS to your project.';\n            throw new Error(msg);\n        }\n\n        PlotlyService.setPlotly(PlotlyModule.plotlyjs);\n    }\n\n    private isValid(): boolean {\n        return PlotlyModule.plotlyjs !== undefined\n            && (typeof PlotlyModule.plotlyjs.plot === 'function'\n                || typeof PlotlyModule.plotlyjs.newPlot === 'function');\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotlyService } from './plotly.service';\nimport { PlotlySharedModule } from './plotly-shared.module';\n\n\nexport type PlotlyBundleName = 'basic' | 'cartesian' | 'geo' | 'gl3d' | 'gl2d' | 'mapbox' | 'finance';\nexport type PlotlyCDNProvider = 'plotly' | 'cloudflare' | 'custom';\n\n@NgModule({\n    declarations: [],\n    imports: [CommonModule, PlotlySharedModule],\n    providers: [PlotlyService],\n    exports: [PlotlySharedModule],\n})\nexport class PlotlyViaCDNModule {\n    private static plotlyBundle?: PlotlyBundleName = undefined;\n    private static plotlyVersion = 'latest';\n    public static plotlyBundleNames: PlotlyBundleName[] = ['basic', 'cartesian', 'geo', 'gl3d', 'gl2d', 'mapbox', 'finance'];\n\n    constructor(public plotlyService: PlotlyService) {\n        PlotlyService.setModuleName('ViaCDN');\n    }\n\n    public static setPlotlyVersion(version: string, cdnProvider: PlotlyCDNProvider = 'plotly', cdnURL: string = ''): void {\n        const isOk = version === 'latest' || /^(strict-)?\\d\\.\\d{1,2}\\.\\d{1,2}$/.test(version);\n        if (!isOk) {\n            throw new Error(`Invalid plotly version. Please set 'latest' or version number (i.e.: 1.4.3) or strict version number (i.e.: strict-1.4.3)`);\n        }\n\n        PlotlyViaCDNModule.loadViaCDN(cdnProvider, cdnURL);\n        PlotlyViaCDNModule.plotlyVersion = version;\n    }\n\n    public static setPlotlyBundle(bundle: PlotlyBundleName | null): void {\n        const isOk = bundle === null || PlotlyViaCDNModule.plotlyBundleNames.indexOf(bundle) >= 0;\n        if (!isOk) {\n            const names = PlotlyViaCDNModule.plotlyBundleNames.map(n => `\"${n}\"`).join(', ');\n            throw new Error(`Invalid plotly bundle. Please set to null for full or ${names} for a partial bundle.`);\n        }\n\n        PlotlyViaCDNModule.plotlyBundle = bundle;\n    }\n\n    public static loadViaCDN(cdnProvider: PlotlyCDNProvider = 'plotly', cdnURL: string = ''): void {\n        PlotlyService.setPlotly('waiting');\n\n        const init = () => {\n            let src: string = '';\n            switch (cdnProvider) {\n                case 'cloudflare':\n                    if (PlotlyViaCDNModule.plotlyVersion == 'latest') {\n                        throw new Error(`As cloudflare hosts version specific files, 'latest' as a version is not supported. Please specify a version or you can choose 'plotly' as a CDN provider.`);\n                    }\n                    src = PlotlyViaCDNModule.plotlyBundle == null\n                        ? `https://cdnjs.cloudflare.com/ajax/libs/plotly.js/${PlotlyViaCDNModule.plotlyVersion}/plotly.min.js`\n                        : `https://cdnjs.cloudflare.com/ajax/libs/plotly.js/${PlotlyViaCDNModule.plotlyVersion}/plotly-${PlotlyViaCDNModule.plotlyBundle}.min.js`;\n                    break;\n                case 'custom':\n                    if(!(!!cdnURL && typeof cdnURL === 'string')) {\n                        throw new Error(`Invalid or missing CDN URL. Please provide a CDN URL in case of custom provider. Alternatively, you can choose from 'plotly' or 'cloudflare'.`);\n                    }\n                    src = cdnURL;\n                    break;\n                default:\n                    src = PlotlyViaCDNModule.plotlyBundle == null\n                        ? `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule.plotlyVersion}.min.js`\n                        : `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule.plotlyBundle}-${PlotlyViaCDNModule.plotlyVersion}.min.js`;\n                    break;\n            }\n\n            const script: HTMLScriptElement = document.createElement('script');\n            script.type = 'text/javascript';\n            script.src = src;\n            script.onerror = () => console.error(`Error loading plotly.js library from ${src}`);\n\n            const head: HTMLHeadElement = document.getElementsByTagName('head')[0];\n            head.appendChild(script);\n\n            let counter = 200; // equivalent of 10 seconds...\n\n            const fn = () => {\n                const plotly = (window as any).Plotly;\n                if (plotly) {\n                    PlotlyService.setPlotly(plotly);\n                } else if (counter > 0) {\n                    counter --;\n                    setTimeout(fn, 50);\n                } else {\n                    throw new Error(`Error loading plotly.js library from ${src}. Timeout.`);\n                }\n            };\n\n            fn();\n        };\n\n        setTimeout(init);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotlyService } from './plotly.service';\nimport { PlotlySharedModule } from './plotly-shared.module';\n\n\n@NgModule({\n    declarations: [],\n    imports: [CommonModule, PlotlySharedModule],\n    providers: [PlotlyService],\n    exports: [PlotlySharedModule],\n})\nexport class PlotlyViaWindowModule {\n    constructor() {\n        const plotly = (window as any).Plotly;\n\n        if (typeof plotly === 'undefined') {\n            throw new Error(`Plotly object not found on window.`);\n        }\n\n        PlotlyService.setPlotly(plotly);\n    }\n}\n","/*\n * Public API Surface of plotly\n */\n\nexport * from './lib/plotly.module';\nexport * from './lib/plotly-via-cdn.module';\nexport * from './lib/plotly-via-window.module';\nexport * from './lib/plotly-shared.module';\n\nexport * from './lib/plotly.service';\nexport * from './lib/plotly.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.PlotlyService","i2.PlotlyThemeLoaderService"],"mappings":"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"}